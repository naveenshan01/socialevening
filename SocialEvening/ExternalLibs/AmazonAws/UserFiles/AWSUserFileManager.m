//
//  AWSUserFileManager.m
//
//
// Copyright 2015 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//

#import "AWSUserFileManager.h"

#import "AWSConfiguration.h"

@protocol AWSUserFileProvider <NSObject>

@required

- (void)PUTURLForKey:(NSString *)key
   completionHandler:(void(^)(NSURL *URL, NSError *error))completionHandler;

- (void)DELETEURLForKey:(NSString *)key
      completionHandler:(void (^)(NSURL *, NSError *))completionHandler;

@end

typedef NS_ENUM(NSInteger, AWSContentManagerType){
    AWSContentManagerTypeS3,
    AWSContentManagerTypeCloudFront,
};

@interface AWSContentManager() <NSURLSessionDelegate>

@property (nonatomic, strong) id<AWSUserFileProvider> contentProvider;
@property (nonatomic, strong) NSURLSession *URLSession;
@property (nonatomic, strong) NSMutableDictionary *runningTasks;

@property (nonatomic, strong) NSMutableArray *uploadingContents;

- (instancetype)initWithType:(AWSContentManagerType)type
                      bucket:(NSString *)bucket
                      domain:(NSString *)domain
                  identifier:(NSString *)identifier;

@end

@interface AWSContent()

@property (nonatomic, strong) AWSContentManager *manager;
@property (nonatomic, assign) AWSContentStatusType status;
@property (nonatomic, strong) NSString *key;
@property (nonatomic, assign) BOOL pinOnCompletion;

@property (nonatomic, strong) NSData *uploadData;
@property (nonatomic, copy) void(^uploadProgressBlock)(AWSLocalContent *content, NSProgress *progress);
@property (nonatomic, copy) void(^uploadCompletionHandler)(AWSLocalContent *content, NSError *error);

- (instancetype)initWithManager:(AWSContentManager *)manager;

@end

@interface AWSLocalContent()

- (instancetype)initWithData:(NSData *)data
                         key:(NSString *)key;

- (instancetype)initWithManager:(AWSContentManager *)manager
                           data:(NSData *)data
                            key:(NSString *)key;

@end

@implementation AWSUserFileManager

@dynamic uploadingContents;

+ (instancetype)sharedManager {
    static AWSUserFileManager *_sharedManager = nil;
    static dispatch_once_t onceToken;
    dispatch_once(&onceToken, ^{
        _sharedManager = [[AWSUserFileManager alloc] initWithType:AWSContentManagerTypeS3
                                                           bucket:AWS_USER_FILE_MANAGER_S3_BUCKET_NAME
                                                           domain:nil
                                                       identifier:AWS_USER_FILE_MANAGER_S3_BUCKET_NAME];
    });

    return _sharedManager;
}

- (AWSLocalContent *)localContentWithData:(NSData *)data
                                      key:(NSString *)key {
    AWSLocalContent *localContent = [[AWSLocalContent alloc] initWithManager:self
                                                                        data:data
                                                                         key:key];
    return localContent;
}

@end
